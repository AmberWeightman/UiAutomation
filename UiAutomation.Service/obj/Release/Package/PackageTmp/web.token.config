<?xml version="1.0" encoding="utf-8" ?>
<configuration>
	<configSections>
		<section name="leap.web" type="Ldm.Infrastructure.Configuration.Section, Ldm.Infrastructure, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" requirePermission="false"/>
		<section name="ldm.security" type="Ldm.Core.Security.Configuration.Section, Ldm.Core.Security, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" requirePermission="false"/>

		<section name="nlog" type="NLog.Config.ConfigSectionHandler, NLog" />
		<sectionGroup name="common">
			<section name="logging" type="Common.Logging.ConfigurationSectionHandler, Common.Logging" />
		</sectionGroup>

	</configSections>

	<!-- ldm.security settings -->
	<!--<ldm.security defaultContextProvider="WcfProvider">
		<contextProviders>
			<add name="WcfProvider" type="Ldm.Services.WCF.ContextProvider, Ldm.OrderFramework.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"/>
		</contextProviders>
	</ldm.security>-->

	<!-- database connection strings -->
	<connectionStrings>
		<add name="ldmCore" connectionString="Data Source=ldmcorelivedc.leap.com.au\SQL2008;Initial Catalog=LdmCore;User Id=LDMS;Password=LDMS;Application Name=DeliverySystem-Manual" providerName="System.Data.SqlClient"/>
	</connectionStrings>

	<!-- application settings -->
	<appSettings> 
  </appSettings>

	<!-- Manual orders smtp server settings -->

	<system.web>
		<compilation debug="true">
			<!--<expressionBuilders>
				<add expressionPrefix="ProfileURL" type="Ldm.Web.Expressions.ProfileURL, Ldm.Manual.Web"/>
			</expressionBuilders>-->
		</compilation>
		<customErrors mode="Off" />
	</system.web>

	<system.serviceModel>
		<bindings>
      <basicHttpBinding>
        <binding name="basicBinding" closeTimeout="00:10:00" openTimeout="00:10:00" sendTimeout="00:10:00" receiveTimeout="00:10:00" maxBufferSize="100000000" maxReceivedMessageSize="100000000">
        </binding>
        <binding name="BasicHttpBinding_ILINZTitleAutomationService" closeTimeout="00:10:00" openTimeout="00:10:00" sendTimeout="00:10:00" receiveTimeout="00:10:00" maxBufferSize="100000000" maxReceivedMessageSize="100000000"></binding>
      </basicHttpBinding>
      <netNamedPipeBinding>
        <binding name="DefaultStandardEndpoint" />
        <binding name="DefaultDuplexEndpoint" />
      </netNamedPipeBinding>
			<customBinding>
				<binding name="interopBinding" closeTimeout="00:10:00" openTimeout="00:10:00" receiveTimeout="00:10:00" sendTimeout="00:10:00" maxReceivedMessageSize="100000000">
          <textMessageEncoding messageVersion="Soap12">
            <readerQuotas maxDepth="100000000" maxStringContentLength="100000000" maxArrayLength="100000000" maxBytesPerRead="100000000" maxNameTableCharCount="100000000" />
          </textMessageEncoding>
					<security authenticationMode="UserNameOverTransport" allowInsecureTransport="True"/>
					<httpTransport useDefaultWebProxy="false" maxBufferSize="100000000" maxBufferPoolSize="100000000" maxReceivedMessageSize="100000000" />
				</binding>
				<binding name="interopBindingHttps" closeTimeout="00:10:00" openTimeout="00:10:00" receiveTimeout="00:10:00" sendTimeout="00:10:00" maxReceivedMessageSize="100000000">
					<textMessageEncoding messageVersion="Soap12">
						<readerQuotas maxDepth="100000000" maxStringContentLength="100000000" maxArrayLength="100000000" maxBytesPerRead="100000000" maxNameTableCharCount="100000000" />
					</textMessageEncoding>
					<security authenticationMode="UserNameOverTransport" securityHeaderLayout="Lax" includeTimestamp="false" messageSecurityVersion="WSSecurity10WSTrustFebruary2005WSSecureConversationFebruary2005WSSecurityPolicy11BasicSecurityProfile10" requireSecurityContextCancellation="false" />
					<httpsTransport requireClientCertificate="false" useDefaultWebProxy="false" transferMode="Streamed" maxBufferSize="1000000000" maxBufferPoolSize="100000000" maxReceivedMessageSize="10000000000" />
				</binding>

        <binding name="CustomBinding_ILINZTitleAutomationService" closeTimeout="00:10:00" openTimeout="00:10:00" sendTimeout="00:10:00" receiveTimeout="00:10:00" maxBufferSize="100000000" maxReceivedMessageSize="100000000"></binding>
				
			</customBinding>
		</bindings>

    <client>
      <endpoint address="net.pipe://localhost/UiPath/service/agent"
          binding="netNamedPipeBinding" bindingConfiguration="DefaultStandardEndpoint"
          contract="UiPathRemote.IUiPathRemoteContract" name="DefaultStandardEndpoint">
        <identity>
          <dns value="localhost" />
        </identity>
      </endpoint>
      <endpoint address="net.pipe://localhost/UiPath/service/duplex/agent"
          binding="netNamedPipeBinding" bindingConfiguration="DefaultDuplexEndpoint"
          contract="UiPathRemote.IUiPathRemoteDuplexContract" name="DefaultDuplexEndpoint">
        <identity>
          <dns value="localhost" />
        </identity>
      </endpoint>
    </client>

    <services>
			<!--<service behaviorConfiguration="LdmBehaviour" name="Service">
				<endpoint binding="customBinding" bindingConfiguration="interopBinding" contract="UiAutomation.Service.ILINZTitleAutomationService" />
				<endpoint binding="customBinding" bindingConfiguration="interopBindingHttps" contract="UiAutomation.Service.ILINZTitleAutomationService" />				
				--><!--<endpoint binding="customBinding" bindingConfiguration="interopBinding" contract="Ldm.Services.OrderUpdates.Contract.IOrderUpdateService"/>
				<endpoint binding="customBinding" bindingConfiguration="interopBindingHttps" contract="Ldm.Services.OrderUpdates.Contract.IOrderUpdateService"/>--><!--
				<endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
			</service>-->
      <!--<service behaviorConfiguration="LdmBehaviour" name="UiAutomation.Service.Service">
        <endpoint binding="customBinding" bindingConfiguration="interopBinding" contract="UiAutomation.Service.ILINZTitleAutomationService" />
        <endpoint binding="customBinding" bindingConfiguration="interopBindingHttps" contract="UiAutomation.Service.ILINZTitleAutomationService" />
        --><!--<endpoint binding="customBinding" bindingConfiguration="interopBinding" contract="Ldm.Services.OrderUpdates.Contract.IOrderUpdateService"/>
				<endpoint binding="customBinding" bindingConfiguration="interopBindingHttps" contract="Ldm.Services.OrderUpdates.Contract.IOrderUpdateService"/>--><!--
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
      </service>-->
      <service behaviorConfiguration="LdmBehaviour" name="UiAutomation.Service.LINZTitleAutomationService">
        <!--<endpoint binding="customBinding" bindingConfiguration="interopBinding" contract="UiAutomation.Contract.ILINZTitleAutomationService" />
        <endpoint binding="customBinding" bindingConfiguration="interopBindingHttps" contract="UiAutomation.Contract.ILINZTitleAutomationService" />-->
        <endpoint binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_ILINZTitleAutomationService" contract="UiAutomation.Contract.ILINZTitleAutomationService"/>
        <!--<endpoint binding="customBinding" bindingConfiguration="CustomBinding_ILINZTitleAutomationService" contract="UiAutomation.Contract.ILINZTitleAutomationService"/>-->
        <!--<endpoint binding="customBinding" bindingConfiguration="interopBinding" contract="Ldm.Services.OrderUpdates.Contract.IOrderUpdateService"/>
				<endpoint binding="customBinding" bindingConfiguration="interopBindingHttps" contract="Ldm.Services.OrderUpdates.Contract.IOrderUpdateService"/>-->
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
      </service>
			
		</services>
		<behaviors>
			<serviceBehaviors>
				<behavior name="LdmBehaviour">
					<serviceDebug includeExceptionDetailInFaults="true" />
					<serviceMetadata httpsGetEnabled="true" httpGetEnabled="true"/>
					<serviceAuthorization principalPermissionMode="Custom">
						<authorizationPolicies>
							<add policyType="Ldm.Services.Security.WCF.AuthorizationPolicy, Ldm.OrderFramework.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
						</authorizationPolicies>
					</serviceAuthorization>
					<serviceCredentials>
						<userNameAuthentication userNamePasswordValidationMode="Custom"
            customUserNamePasswordValidatorType="Ldm.Services.Security.WCF.UserNamePasswordValidator, Ldm.OrderFramework.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
					</serviceCredentials>
					<serviceThrottling maxConcurrentCalls="1000" maxConcurrentSessions="1000" />
				</behavior>
			</serviceBehaviors>
		</behaviors>
		
		<serviceHostingEnvironment multipleSiteBindingsEnabled="true" aspNetCompatibilityEnabled="true" />
	</system.serviceModel>

	<common>
		<logging>
			<factoryAdapter type="Common.Logging.Simple.TraceLoggerFactoryAdapter, Common.Logging">
				<arg key="level" value="ALL" />
				<arg key="showLogName" value="true" />
				<arg key="showDataTime" value="true" />
				<arg key="dateTimeFormat" value="yyyy/MM/dd HH:mm:ss:fff" />
				<arg key="useTraceSource" value="true" />
			</factoryAdapter>
		</logging>
	</common>


</configuration>
